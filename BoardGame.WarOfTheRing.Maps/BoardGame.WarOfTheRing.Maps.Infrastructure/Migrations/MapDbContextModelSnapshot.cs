// <auto-generated />
using System;
using System.Collections.Generic;
using BoardGame.WarOfTheRing.Maps.Infrastructure.Persistence.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BoardGame.WarOfTheRing.Maps.Infrastructure.Migrations
{
    [DbContext(typeof(MapDbContext))]
    partial class MapDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BoardGame.WarOfTheRing.Maps.Domain.Aggregates.Maps.Entities.Nation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsAtWar")
                        .HasColumnType("boolean");

                    b.Property<Guid>("MapId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.ComplexProperty<Dictionary<string, object>>("BelongsTo", "BoardGame.WarOfTheRing.Maps.Domain.Aggregates.Maps.Entities.Nation.BelongsTo#Force", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<string>("Name")
                                .HasColumnType("text");
                        });

                    b.HasKey("Id");

                    b.HasIndex("MapId");

                    b.ToTable("Nation");
                });

            modelBuilder.Entity("BoardGame.WarOfTheRing.Maps.Domain.Aggregates.Maps.Entities.Region", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("InBorderOf")
                        .HasColumnType("text");

                    b.Property<Guid>("MapId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.ComplexProperty<Dictionary<string, object>>("Terrain", "BoardGame.WarOfTheRing.Maps.Domain.Aggregates.Maps.Entities.Region.Terrain#Terrain", b1 =>
                        {
                            b1.IsRequired();

                            b1.Property<bool>("HasFortification")
                                .HasColumnType("boolean");

                            b1.Property<bool>("IsEmpty")
                                .HasColumnType("boolean");

                            b1.ComplexProperty<Dictionary<string, object>>("Settlement", "BoardGame.WarOfTheRing.Maps.Domain.Aggregates.Maps.Entities.Region.Terrain#Terrain.Settlement#Settlement", b2 =>
                                {
                                    b2.IsRequired();

                                    b2.Property<string>("Type")
                                        .HasColumnType("text");

                                    b2.Property<int>("VictoryPoint")
                                        .HasColumnType("integer");

                                    b2.ComplexProperty<Dictionary<string, object>>("ControlledBy", "BoardGame.WarOfTheRing.Maps.Domain.Aggregates.Maps.Entities.Region.Terrain#Terrain.Settlement#Settlement.ControlledBy#Force", b3 =>
                                        {
                                            b3.IsRequired();

                                            b3.Property<string>("Name")
                                                .HasColumnType("text");
                                        });
                                });
                        });

                    b.HasKey("Id");

                    b.HasIndex("MapId");

                    b.ToTable("Region");
                });

            modelBuilder.Entity("BoardGame.WarOfTheRing.Maps.Domain.Aggregates.Maps.Map", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Maps");
                });

            modelBuilder.Entity("BoardGame.WarOfTheRing.Maps.Domain.Aggregates.Maps.Entities.Nation", b =>
                {
                    b.HasOne("BoardGame.WarOfTheRing.Maps.Domain.Aggregates.Maps.Map", null)
                        .WithMany("Nations")
                        .HasForeignKey("MapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("BoardGame.WarOfTheRing.Maps.Domain.Aggregates.Maps.ValueObjects.Unit", "Reinforcements", b1 =>
                        {
                            b1.Property<Guid>("NationId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            b1.Property<string>("NationName")
                                .HasColumnType("text");

                            b1.HasKey("NationId", "Id");

                            b1.ToTable("Nation");

                            b1.ToJson("Reinforcements");

                            b1.WithOwner()
                                .HasForeignKey("NationId");

                            b1.OwnsOne("BoardGame.WarOfTheRing.Maps.Domain.Aggregates.Maps.ValueObjects.UnitType", "Type", b2 =>
                                {
                                    b2.Property<Guid>("UnitNationId")
                                        .HasColumnType("uuid");

                                    b2.Property<int>("UnitId")
                                        .HasColumnType("integer");

                                    b2.Property<string>("Value")
                                        .HasColumnType("text");

                                    b2.HasKey("UnitNationId", "UnitId");

                                    b2.ToTable("Nation");

                                    b2.WithOwner()
                                        .HasForeignKey("UnitNationId", "UnitId");
                                });

                            b1.Navigation("Type");
                        });

                    b.Navigation("Reinforcements");
                });

            modelBuilder.Entity("BoardGame.WarOfTheRing.Maps.Domain.Aggregates.Maps.Entities.Region", b =>
                {
                    b.HasOne("BoardGame.WarOfTheRing.Maps.Domain.Aggregates.Maps.Map", null)
                        .WithMany("Regions")
                        .HasForeignKey("MapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("BoardGame.WarOfTheRing.Maps.Domain.Aggregates.Maps.ValueObjects.Army", "Army", b1 =>
                        {
                            b1.Property<Guid>("RegionId")
                                .HasColumnType("uuid");

                            b1.HasKey("RegionId");

                            b1.ToTable("Region");

                            b1.WithOwner()
                                .HasForeignKey("RegionId");

                            b1.OwnsMany("BoardGame.WarOfTheRing.Maps.Domain.Aggregates.Maps.ValueObjects.Unit", "Units", b2 =>
                                {
                                    b2.Property<Guid>("ArmyRegionId")
                                        .HasColumnType("uuid");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer");

                                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b2.Property<int>("Id"));

                                    b2.Property<string>("NationName")
                                        .HasColumnType("text");

                                    b2.HasKey("ArmyRegionId", "Id");

                                    b2.ToTable("Region_Units");

                                    b2.WithOwner()
                                        .HasForeignKey("ArmyRegionId");

                                    b2.OwnsOne("BoardGame.WarOfTheRing.Maps.Domain.Aggregates.Maps.ValueObjects.UnitType", "Type", b3 =>
                                        {
                                            b3.Property<Guid>("UnitArmyRegionId")
                                                .HasColumnType("uuid");

                                            b3.Property<int>("UnitId")
                                                .HasColumnType("integer");

                                            b3.Property<string>("Value")
                                                .HasColumnType("text");

                                            b3.HasKey("UnitArmyRegionId", "UnitId");

                                            b3.ToTable("Region_Units");

                                            b3.WithOwner()
                                                .HasForeignKey("UnitArmyRegionId", "UnitId");
                                        });

                                    b2.Navigation("Type")
                                        .IsRequired();
                                });

                            b1.Navigation("Units");
                        });

                    b.OwnsMany("BoardGame.WarOfTheRing.Maps.Domain.Aggregates.Maps.ValueObjects.Neighbor", "Neighbors", b1 =>
                        {
                            b1.Property<Guid>("RegionId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            b1.Property<string>("Name")
                                .HasColumnType("text");

                            b1.HasKey("RegionId", "Id");

                            b1.ToTable("Region");

                            b1.ToJson("Neighbors");

                            b1.WithOwner()
                                .HasForeignKey("RegionId");
                        });

                    b.Navigation("Army")
                        .IsRequired();

                    b.Navigation("Neighbors");
                });

            modelBuilder.Entity("BoardGame.WarOfTheRing.Maps.Domain.Aggregates.Maps.Map", b =>
                {
                    b.Navigation("Nations");

                    b.Navigation("Regions");
                });
#pragma warning restore 612, 618
        }
    }
}
